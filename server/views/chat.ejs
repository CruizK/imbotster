<%- include('partials/header') -%>

<style>
  .question-text {
    cursor: pointer;
    padding: 10px;
    border: 2px solid transparent;
  }

  .question-text:hover {
    border: 2px solid black;
  }

  .question-span {
    font-size: 16px;
    
  }

  #chat {
    height: 300px;
    overflow: scroll;
    padding: 20px;
  }
</style>

<body>
<h1 class="current-question"></h1>
  <ul id="chat">

  </ul>
  <form id="chat-form" action="">
    <input type="text" id="message" placeholder="Enter Text Here..."/>
    <input type="submit" id="answer" value="Send" />
  </form>
  <ul class="questions">
    <li class="question-text" index="0"></li>
    <li class="question-text" index="1"></li>
    <li class="question-text" index="2"></li>
    <li class="question-text" index="3"></li>
  </ul>
</body>
<script>
var socket = io('http://localhost:3000');
var userId;
var user;
let code = "<%= code %>";
let currentQuestions;
let currentQuestion;
let questionPlayer = 'Player 1';

$('.current-question').hide();
$('.questions').hide();
$("#chat-form").hide();
$(document).ready(function() {

  socket.emit('joinRoom', code);
  $('#chat-form').submit(e => {
    e.preventDefault();
    socket.emit('answer',
      code, 
      user,
      $('#message').val(),
      currentQuestion, 
    );
    $('#message').val('');
    $('#chat-form').hide();
    return false;
  });



  socket.on('joinedRoom', (id) => {
    userId = id;
  })

  socket.on('start', (players) => {
    console.log("You are player: " + players[userId].name);
    user = players[userId].name;
    
    if(user == questionPlayer) {
      socket.emit('getQuestions');
    }
  })

  socket.on('gotQuestions', questions => {
    currentQuestions = questions;
    var texts = $('.question-text');
    console.log(texts);
    for(let i = 0; i < texts.length; i++) {
      $(texts[i]).text(currentQuestions[i].questionText);
    }
    $('.question-text').click(function() {
      console.log(this);
      let index = $(this).attr('index');
      console.log(index);
      socket.emit('selectQuestion', code, currentQuestions[index]);
      console.log("Question selected: " + currentQuestions[index].questionText);
    })
    $('.questions').show();
  })

  socket.on('nextRound', (currentPlayer) => {
    questionPlayer = currentPlayer;
    console.log(questionPlayer);
    if(user == questionPlayer) {
      socket.emit('getQuestions');
    }
  })

  socket.on('voteOff', () => {
    let players = ['Player 1', 'Player 2', 'Player 3', 'Player 4', 'Player 5'];
    players = players.filter(val => user != val);
    var texts = $('.question-text');
    console.log(players);
    for(let i = 0; i < texts.length; i++) {
      $(texts[i]).text(players[i]);
    }
    $('.questions').show();
    $('.question-text').click(function() {
      let index = $(this).attr('index');
      socket.emit('voteOff', code, players[index]);
      console.log("You Voted Off : " + players[index]);
      $('.questions').hide();
    })
  })

  socket.on('votedOff', (playerVoted) => {
    console.log(user);
    if(user == playerVoted) {
      location.href += 'fail'
    }
    console.log('Player Voted Off: ' + playerVoted);
  })

  socket.on('questionSelected', question => {
    currentQuestion = question;
    $("#chat").append("<li><span class='question-span'>Question: " + question.questionText + "</span></li>");
    $('#chat').scrollTop($('#chat')[0].scrollHeight);
    $('.questions').hide();
    if(user != questionPlayer) {
      $('#chat-form').show();
    }
  })

  socket.on('answerSubmitted', (msg) => {
    $("#chat").append($('<li>').text(msg));
    $('#chat').scrollTop($('#chat')[0].scrollHeight);
  })
})
</script>

<%- include('partials/footer') -%>